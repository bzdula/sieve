[
  [
    0,
    {
      "Require": [
        {
          "Other": "vnd.stalwart.testsuite"
        },
        "Variables"
      ]
    }
  ],
  [
    1,
    {
      "TestBlock": "RFC - leading zeroes"
    }
  ],
  [
    2,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 4
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "frop:frup:frop"
              }
            ],
            "key_list": [
              {
                "Text": "*:*:*"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    3,
    {
      "Jz": 5
    }
  ],
  [
    4,
    {
      "Error": {
        "message": {
          "Text": "failed to match"
        }
      }
    }
  ],
  [
    5,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 2
              }
            ],
            "key_list": [
              {
                "Text": "frup"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    6,
    {
      "Jz": 8
    }
  ],
  [
    7,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match value (0000002): "
            },
            {
              "MatchVariable": 2
            }
          ]
        }
      }
    }
  ],
  [
    8,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 4
      }
    }
  ],
  [
    9,
    {
      "TestBlock": "RFC - not greedy"
    }
  ],
  [
    10,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 14
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "frop.......frop.........frop...."
              }
            ],
            "key_list": [
              {
                "Text": "?*frop*"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    11,
    {
      "Jz": 13
    }
  ],
  [
    12,
    {
      "Error": {
        "message": {
          "Text": "failed to match"
        }
      }
    }
  ],
  [
    13,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "MatchVariable": 1
                  },
                  {
                    "MatchVariable": 2
                  },
                  {
                    "MatchVariable": 3
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "frop................frop...."
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    14,
    {
      "Jz": 16
    }
  ],
  [
    15,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "MatchVariable": 1
            },
            {
              "MatchVariable": 2
            },
            {
              "MatchVariable": 3
            }
          ]
        }
      }
    }
  ],
  [
    16,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 14
      }
    }
  ],
  [
    17,
    {
      "TestBlock": "RFC - index out of range"
    }
  ],
  [
    18,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 4
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "test"
              }
            ],
            "key_list": [
              {
                "Text": "*"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    19,
    {
      "Jz": 21
    }
  ],
  [
    20,
    {
      "Error": {
        "message": {
          "Text": "failed to match (impossible)"
        }
      }
    }
  ],
  [
    21,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 2
              }
            ],
            "key_list": [
              {
                "Text": ""
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    22,
    {
      "Jz": 24
    }
  ],
  [
    23,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match value: '"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": "'"
            }
          ]
        }
      }
    }
  ],
  [
    24,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 4
      }
    }
  ],
  [
    25,
    {
      "TestBlock": "RFC - index 0"
    }
  ],
  [
    26,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 1
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "a b c d e f g"
              }
            ],
            "key_list": [
              {
                "Text": "? ? ? ? ? ? ?"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    27,
    {
      "Jz": 29
    }
  ],
  [
    28,
    {
      "Error": {
        "message": {
          "Text": "failed to match"
        }
      }
    }
  ],
  [
    29,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 0
              }
            ],
            "key_list": [
              {
                "Text": "a b c d e f g"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    30,
    {
      "Jz": 32
    }
  ],
  [
    31,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match value: "
            },
            {
              "MatchVariable": 0
            }
          ]
        }
      }
    }
  ],
  [
    32,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 1
      }
    }
  ],
  [
    33,
    {
      "TestBlock": "RFC - test short-circuit"
    }
  ],
  [
    34,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 2
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "a b c d e f g"
              }
            ],
            "key_list": [
              {
                "Text": "? ?"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    35,
    {
      "Jz": 39
    }
  ],
  [
    36,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 2
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "puk pok puk pok"
              }
            ],
            "key_list": [
              {
                "Text": "pu*ok"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    37,
    {
      "Jz": 39
    }
  ],
  [
    38,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 2
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "Text": "snot kip snot"
              }
            ],
            "key_list": [
              {
                "Text": "snot*snot"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    39,
    {
      "Jz": 41
    }
  ],
  [
    40,
    {
      "Error": {
        "message": {
          "Text": "failed to match any"
        }
      }
    }
  ],
  [
    41,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": " kip "
              }
            ],
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    42,
    {
      "Jz": 44
    }
  ],
  [
    43,
    {
      "Error": {
        "message": {
          "Text": "did not short-circuit test execution or intented test failed."
        }
      }
    }
  ],
  [
    44,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "k pok puk p"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    45,
    {
      "Jz": 47
    }
  ],
  [
    46,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match value: "
            },
            {
              "MatchVariable": 1
            }
          ]
        }
      }
    }
  ],
  [
    47,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 2
      }
    }
  ],
  [
    48,
    {
      "TestBlock": "RFC - values overwrite"
    }
  ],
  [
    49,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 0
        },
        "value": {
          "Text": "the cat jumps off the table"
        }
      }
    }
  ],
  [
    50,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 1
        },
        "value": {
          "Text": "the dog barks at the cat in the alley"
        }
      }
    }
  ],
  [
    51,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 6
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 0
              }
            ],
            "key_list": [
              {
                "Text": "the * jumps off the *"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    52,
    {
      "Jz": 54
    }
  ],
  [
    53,
    {
      "Error": {
        "message": {
          "Text": "failed to match first sentence"
        }
      }
    }
  ],
  [
    54,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "MatchVariable": 1
                  },
                  {
                    "Text": ":"
                  },
                  {
                    "MatchVariable": 2
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "cat:table"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    55,
    {
      "Jz": 57
    }
  ],
  [
    56,
    {
      "Error": {
        "message": {
          "Text": "invalid match values"
        }
      }
    }
  ],
  [
    57,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 6
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "the * barks at the * in the store"
              }
            ],
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    58,
    {
      "Jz": 60
    }
  ],
  [
    59,
    {
      "Error": {
        "message": {
          "Text": "should not have matched second sentence"
        }
      }
    }
  ],
  [
    60,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "MatchVariable": 1
                  },
                  {
                    "Text": ":"
                  },
                  {
                    "MatchVariable": 2
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "cat:table"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    61,
    {
      "Jz": 63
    }
  ],
  [
    62,
    {
      "Error": {
        "message": {
          "Text": "should have preserved match values"
        }
      }
    }
  ],
  [
    63,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 6
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "the * barks at the * in the alley"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    64,
    {
      "Jz": 66
    }
  ],
  [
    65,
    {
      "Error": {
        "message": {
          "Text": "failed to match the second sentence (second time)"
        }
      }
    }
  ],
  [
    66,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "MatchVariable": 1
                  },
                  {
                    "Text": ":"
                  },
                  {
                    "MatchVariable": 2
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "dog:cat"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    67,
    {
      "Jz": 69
    }
  ],
  [
    68,
    {
      "Error": {
        "message": {
          "Text": "should have overwritten match values"
        }
      }
    }
  ],
  [
    69,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 2,
        "match_vars": 6
      }
    }
  ],
  [
    70,
    {
      "TestBlock": "RFC - example"
    }
  ],
  [
    71,
    {
      "Invalid": {
        "name": "test_set",
        "line_num": 103,
        "line_pos": 2
      }
    }
  ],
  [
    72,
    {
      "Test": {
        "test": {
          "Header": {
            "header_list": [
              {
                "Text": "List-ID"
              }
            ],
            "key_list": [
              {
                "Text": "*<*@*"
              }
            ],
            "match_type": {
              "Matches": 7
            },
            "comparator": "AsciiCaseMap",
            "index": null,
            "index_last": false,
            "mime": false,
            "mime_opts": "None",
            "mime_anychild": false,
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    73,
    {
      "Jz": 78
    }
  ],
  [
    74,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "Text": "INBOX.lists."
                  },
                  {
                    "MatchVariable": 2
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "INBOX.lists.dovecot"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    75,
    {
      "Jz": 77
    }
  ],
  [
    76,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match value: INBOX.lists."
            },
            {
              "MatchVariable": 2
            }
          ]
        }
      }
    }
  ],
  [
    77,
    {
      "Jmp": 79
    }
  ],
  [
    78,
    {
      "Error": {
        "message": {
          "Text": "failed to match list header"
        }
      }
    }
  ],
  [
    79,
    {
      "Test": {
        "test": {
          "Header": {
            "header_list": [
              {
                "Text": "Subject"
              }
            ],
            "key_list": [
              {
                "Text": "[*] *"
              }
            ],
            "match_type": {
              "Matches": 7
            },
            "comparator": "AsciiCaseMap",
            "index": null,
            "index_last": false,
            "mime": false,
            "mime_opts": "None",
            "mime_anychild": false,
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    80,
    {
      "Jz": 87
    }
  ],
  [
    81,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "acme-users"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    82,
    {
      "Jnz": 84
    }
  ],
  [
    83,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 2
              }
            ],
            "key_list": [
              {
                "Text": "[fwd] version 1.0 is out"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    84,
    {
      "Jz": 86
    }
  ],
  [
    85,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "invalid match values: "
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": " "
            },
            {
              "MatchVariable": 2
            }
          ]
        }
      }
    }
  ],
  [
    86,
    {
      "Jmp": 88
    }
  ],
  [
    87,
    {
      "Error": {
        "message": {
          "Text": "failed to match subject"
        }
      }
    }
  ],
  [
    88,
    {
      "Test": {
        "test": {
          "Address": {
            "header_list": [
              {
                "Text": "To"
              },
              {
                "Text": "Cc"
              }
            ],
            "key_list": [
              {
                "Text": "coyote@**.com"
              },
              {
                "Text": "wile@**.com"
              }
            ],
            "address_part": "All",
            "match_type": {
              "Matches": 7
            },
            "comparator": "AsciiCaseMap",
            "index": null,
            "index_last": false,
            "mime": false,
            "mime_anychild": false,
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    89,
    {
      "Jz": 98
    }
  ],
  [
    90,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 0
              }
            ],
            "key_list": [
              {
                "Text": "coyote@ACME.Example.COM"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    91,
    {
      "Jnz": 95
    }
  ],
  [
    92,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": ""
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    93,
    {
      "Jnz": 95
    }
  ],
  [
    94,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 2
              }
            ],
            "key_list": [
              {
                "Text": "ACME.Example"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    95,
    {
      "Jz": 97
    }
  ],
  [
    96,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "invalid match values: "
            },
            {
              "MatchVariable": 0
            },
            {
              "Text": ", "
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ", "
            },
            {
              "MatchVariable": 2
            }
          ]
        }
      }
    }
  ],
  [
    97,
    {
      "Jmp": 99
    }
  ],
  [
    98,
    {
      "Error": {
        "message": {
          "Text": "failed to match to address"
        }
      }
    }
  ],
  [
    99,
    {
      "Test": {
        "test": "True",
        "is_not": false
      }
    }
  ],
  [
    100,
    {
      "Jnz": 102
    }
  ],
  [
    101,
    {
      "Test": {
        "test": {
          "Address": {
            "header_list": [
              {
                "Text": "To"
              }
            ],
            "key_list": [
              {
                "Text": "*.com"
              }
            ],
            "address_part": "Domain",
            "match_type": {
              "Matches": 0
            },
            "comparator": "AsciiCaseMap",
            "index": null,
            "index_last": false,
            "mime": false,
            "mime_anychild": false,
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    102,
    {
      "Jz": 103
    }
  ],
  [
    103,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 7
      }
    }
  ],
  [
    104,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 0
        },
        "value": {
          "Text": "Test of general stupidity"
        }
      }
    }
  ],
  [
    105,
    {
      "TestBlock": "Begin"
    }
  ],
  [
    106,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 2
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 0
              }
            ],
            "key_list": [
              {
                "Text": "Test of *"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    107,
    {
      "Jz": 109
    }
  ],
  [
    108,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    109,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "general stupidity"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    110,
    {
      "Jz": 112
    }
  ],
  [
    111,
    {
      "Error": {
        "message": {
          "Text": "match value incorrect"
        }
      }
    }
  ],
  [
    112,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 2
      }
    }
  ],
  [
    113,
    {
      "TestBlock": "Begin no match"
    }
  ],
  [
    114,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 0
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 0
              }
            ],
            "key_list": [
              {
                "Text": "of *"
              }
            ],
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    115,
    {
      "Jz": 117
    }
  ],
  [
    116,
    {
      "Error": {
        "message": {
          "Text": "should not have matched"
        }
      }
    }
  ],
  [
    117,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 1
        },
        "value": {
          "Text": "toptoptop"
        }
      }
    }
  ],
  [
    118,
    {
      "TestBlock": "End"
    }
  ],
  [
    119,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 2
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "*top"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    120,
    {
      "Jz": 122
    }
  ],
  [
    121,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    122,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "toptop"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    123,
    {
      "Jz": 125
    }
  ],
  [
    124,
    {
      "Error": {
        "message": {
          "Text": "match value incorrect"
        }
      }
    }
  ],
  [
    125,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 2
      }
    }
  ],
  [
    126,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 2
        },
        "value": {
          "Text": "ik ben een tukker met grote oren en een lelijke broek."
        }
      }
    }
  ],
  [
    127,
    {
      "TestBlock": "Multiple"
    }
  ],
  [
    128,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 14
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 2
              }
            ],
            "key_list": [
              {
                "Text": "ik ben * met * en *."
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    129,
    {
      "Jz": 131
    }
  ],
  [
    130,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    131,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 3
        },
        "value": {
          "List": [
            {
              "Text": "Hij is "
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": " met "
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": " en "
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": "!"
            }
          ]
        }
      }
    }
  ],
  [
    132,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 3
              }
            ],
            "key_list": [
              {
                "Text": "Hij is een tukker met grote oren en een lelijke broek!"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    133,
    {
      "Jz": 135
    }
  ],
  [
    134,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "match values incorrect: "
            },
            {
              "LocalVariable": 3
            }
          ]
        }
      }
    }
  ],
  [
    135,
    {
      "Clear": {
        "local_vars_idx": 3,
        "local_vars_num": 1,
        "match_vars": 14
      }
    }
  ],
  [
    136,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 3
        },
        "value": {
          "Text": "beter van niet?"
        }
      }
    }
  ],
  [
    137,
    {
      "TestBlock": "Escape"
    }
  ],
  [
    138,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 2
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 3
              }
            ],
            "key_list": [
              {
                "Text": "*?"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    139,
    {
      "Jz": 141
    }
  ],
  [
    140,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    141,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "MatchVariable": 1
              }
            ],
            "key_list": [
              {
                "Text": "beter van niet"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    142,
    {
      "Jz": 144
    }
  ],
  [
    143,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "match value incorrect: "
            },
            {
              "MatchVariable": 1
            }
          ]
        }
      }
    }
  ],
  [
    144,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 2
      }
    }
  ],
  [
    145,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 4
        },
        "value": {
          "Text": "The quick brown fox jumps over the lazy dog."
        }
      }
    }
  ],
  [
    146,
    {
      "TestBlock": "Alphabet ?"
    }
  ],
  [
    147,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 134217726
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 4
              }
            ],
            "key_list": [
              {
                "Text": "T?? ????? ????? ?o? ?u??? o?er ?he ???? ?o?."
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    148,
    {
      "Jz": 150
    }
  ],
  [
    149,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    150,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 5
        },
        "value": {
          "List": [
            {
              "MatchVariable": 22
            },
            {
              "MatchVariable": 8
            },
            {
              "MatchVariable": 6
            },
            {
              "MatchVariable": 25
            },
            {
              "MatchVariable": 2
            },
            {
              "MatchVariable": 13
            },
            {
              "MatchVariable": 26
            },
            {
              "MatchVariable": 1
            },
            {
              "MatchVariable": 5
            },
            {
              "MatchVariable": 15
            },
            {
              "MatchVariable": 7
            },
            {
              "MatchVariable": 21
            },
            {
              "MatchVariable": 16
            },
            {
              "MatchVariable": 12
            },
            {
              "MatchVariable": 10
            },
            {
              "MatchVariable": 17
            },
            {
              "MatchVariable": 3
            },
            {
              "MatchVariable": 9
            },
            {
              "MatchVariable": 18
            },
            {
              "MatchVariable": 20
            },
            {
              "MatchVariable": 4
            },
            {
              "MatchVariable": 19
            },
            {
              "MatchVariable": 11
            },
            {
              "MatchVariable": 14
            },
            {
              "MatchVariable": 24
            },
            {
              "MatchVariable": 23
            }
          ]
        }
      }
    }
  ],
  [
    151,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 5
              }
            ],
            "key_list": [
              {
                "Text": "abcdefghijklmnopqrstuvwxyz"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    152,
    {
      "Jz": 154
    }
  ],
  [
    153,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "match values incorrect: "
            },
            {
              "LocalVariable": 5
            }
          ]
        }
      }
    }
  ],
  [
    154,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 0
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 4
              }
            ],
            "key_list": [
              {
                "Text": "T?? ????? ?w??? ?o? ?u??? o?er ?he ???? ?o?."
              }
            ],
            "list": false
          }
        },
        "is_not": false
      }
    }
  ],
  [
    155,
    {
      "Jz": 157
    }
  ],
  [
    156,
    {
      "Error": {
        "message": {
          "Text": "should not have matched"
        }
      }
    }
  ],
  [
    157,
    {
      "Clear": {
        "local_vars_idx": 5,
        "local_vars_num": 1,
        "match_vars": 134217726
      }
    }
  ],
  [
    158,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 5
        },
        "value": {
          "Text": "zero:one:zero|three;one;zero/five"
        }
      }
    }
  ],
  [
    159,
    {
      "TestBlock": "Words sep ?"
    }
  ],
  [
    160,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 14
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 5
              }
            ],
            "key_list": [
              {
                "Text": "*one?zero?five"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    161,
    {
      "Jz": 163
    }
  ],
  [
    162,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    163,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "MatchVariable": 1
                  },
                  {
                    "MatchVariable": 2
                  },
                  {
                    "MatchVariable": 3
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "zero:one:zero|three;;/"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    164,
    {
      "Jz": 166
    }
  ],
  [
    165,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": " "
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": " "
            },
            {
              "MatchVariable": 3
            }
          ]
        }
      }
    }
  ],
  [
    166,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 14
      }
    }
  ],
  [
    167,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 6
        },
        "value": {
          "Text": "frop"
        }
      }
    }
  ],
  [
    168,
    {
      "TestBlock": "Letters begin ?"
    }
  ],
  [
    169,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 15
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 6
              }
            ],
            "key_list": [
              {
                "Text": "??op"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    170,
    {
      "Jz": 172
    }
  ],
  [
    171,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    172,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 7
        },
        "value": {
          "List": [
            {
              "MatchVariable": 0
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": ":"
            }
          ]
        }
      }
    }
  ],
  [
    173,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 7
              }
            ],
            "key_list": [
              {
                "Text": "frop:f:r::"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    174,
    {
      "Jz": 176
    }
  ],
  [
    175,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "LocalVariable": 7
            }
          ]
        }
      }
    }
  ],
  [
    176,
    {
      "Clear": {
        "local_vars_idx": 7,
        "local_vars_num": 1,
        "match_vars": 15
      }
    }
  ],
  [
    177,
    {
      "TestBlock": "Letters end ?"
    }
  ],
  [
    178,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 15
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 6
              }
            ],
            "key_list": [
              {
                "Text": "fr??"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    179,
    {
      "Jz": 181
    }
  ],
  [
    180,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    181,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 7
        },
        "value": {
          "List": [
            {
              "MatchVariable": 0
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": ":"
            }
          ]
        }
      }
    }
  ],
  [
    182,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 7
              }
            ],
            "key_list": [
              {
                "Text": "frop:o:p::"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    183,
    {
      "Jz": 185
    }
  ],
  [
    184,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "LocalVariable": 7
            }
          ]
        }
      }
    }
  ],
  [
    185,
    {
      "Clear": {
        "local_vars_idx": 7,
        "local_vars_num": 1,
        "match_vars": 15
      }
    }
  ],
  [
    186,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 7
        },
        "value": {
          "Text": "klopfropstroptop"
        }
      }
    }
  ],
  [
    187,
    {
      "TestBlock": "Letters words *? - 1"
    }
  ],
  [
    188,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 63
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 7
              }
            ],
            "key_list": [
              {
                "Text": "*fr??*top"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    189,
    {
      "Jz": 191
    }
  ],
  [
    190,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    191,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 8
        },
        "value": {
          "List": [
            {
              "Text": ":"
            },
            {
              "MatchVariable": 0
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 4
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 5
            },
            {
              "Text": ":"
            }
          ]
        }
      }
    }
  ],
  [
    192,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 8
              }
            ],
            "key_list": [
              {
                "Text": ":klopfropstroptop:klop:o:p:strop::"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    193,
    {
      "Jz": 195
    }
  ],
  [
    194,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "LocalVariable": 8
            }
          ]
        }
      }
    }
  ],
  [
    195,
    {
      "Clear": {
        "local_vars_idx": 8,
        "local_vars_num": 1,
        "match_vars": 63
      }
    }
  ],
  [
    196,
    {
      "TestBlock": "Letters words *? - 2"
    }
  ],
  [
    197,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 127
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 7
              }
            ],
            "key_list": [
              {
                "Text": "?*fr??*top"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    198,
    {
      "Jz": 200
    }
  ],
  [
    199,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    200,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 8
        },
        "value": {
          "List": [
            {
              "Text": ":"
            },
            {
              "MatchVariable": 0
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 4
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 5
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 6
            },
            {
              "Text": ":"
            }
          ]
        }
      }
    }
  ],
  [
    201,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 8
              }
            ],
            "key_list": [
              {
                "Text": ":klopfropstroptop:k:lop:o:p:strop::"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    202,
    {
      "Jz": 204
    }
  ],
  [
    203,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "LocalVariable": 8
            }
          ]
        }
      }
    }
  ],
  [
    204,
    {
      "Clear": {
        "local_vars_idx": 8,
        "local_vars_num": 1,
        "match_vars": 127
      }
    }
  ],
  [
    205,
    {
      "TestBlock": "Letters words *? backtrack"
    }
  ],
  [
    206,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 31
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 7
              }
            ],
            "key_list": [
              {
                "Text": "*?op"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    207,
    {
      "Jz": 209
    }
  ],
  [
    208,
    {
      "Error": {
        "message": {
          "Text": "should have matched"
        }
      }
    }
  ],
  [
    209,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 8
        },
        "value": {
          "List": [
            {
              "Text": ":"
            },
            {
              "MatchVariable": 0
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 4
            },
            {
              "Text": ":"
            }
          ]
        }
      }
    }
  ],
  [
    210,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 8
              }
            ],
            "key_list": [
              {
                "Text": ":klopfropstroptop:klopfropstrop:t:::"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    211,
    {
      "Jz": 213
    }
  ],
  [
    212,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "LocalVariable": 8
            }
          ]
        }
      }
    }
  ],
  [
    213,
    {
      "Clear": {
        "local_vars_idx": 8,
        "local_vars_num": 1,
        "match_vars": 31
      }
    }
  ],
  [
    214,
    {
      "TestBlock": "Letters words *? first"
    }
  ],
  [
    215,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": {
              "Matches": 31
            },
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 7
              }
            ],
            "key_list": [
              {
                "Text": "*?op*"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    216,
    {
      "Jz": 218
    }
  ],
  [
    217,
    {
      "Error": {
        "message": {
          "Text": "failed to match"
        }
      }
    }
  ],
  [
    218,
    {
      "Set": {
        "modifiers": [],
        "name": {
          "Local": 8
        },
        "value": {
          "List": [
            {
              "Text": ":"
            },
            {
              "MatchVariable": 0
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 1
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 2
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 3
            },
            {
              "Text": ":"
            },
            {
              "MatchVariable": 4
            },
            {
              "Text": ":"
            }
          ]
        }
      }
    }
  ],
  [
    219,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "LocalVariable": 8
              }
            ],
            "key_list": [
              {
                "Text": ":klopfropstroptop:k:l:fropstroptop::"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    220,
    {
      "Jz": 222
    }
  ],
  [
    221,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "LocalVariable": 8
            }
          ]
        }
      }
    }
  ],
  [
    222,
    {
      "Clear": {
        "local_vars_idx": 8,
        "local_vars_num": 1,
        "match_vars": 31
      }
    }
  ],
  [
    223,
    {
      "Invalid": {
        "name": "test_set",
        "line_num": 339,
        "line_pos": 1
      }
    }
  ],
  [
    224,
    {
      "TestBlock": "Match combined"
    }
  ],
  [
    225,
    {
      "Test": {
        "test": {
          "Header": {
            "header_list": [
              {
                "Text": "subject"
              }
            ],
            "key_list": [
              {
                "Text": "Log for ?* build of *"
              }
            ],
            "match_type": {
              "Matches": 6
            },
            "comparator": "AsciiCaseMap",
            "index": null,
            "index_last": false,
            "mime": false,
            "mime_opts": "None",
            "mime_anychild": false,
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    226,
    {
      "Jz": 228
    }
  ],
  [
    227,
    {
      "Error": {
        "message": {
          "Text": "failed to match"
        }
      }
    }
  ],
  [
    228,
    {
      "Test": {
        "test": {
          "String": {
            "match_type": "Is",
            "comparator": "AsciiCaseMap",
            "source": [
              {
                "List": [
                  {
                    "MatchVariable": 1
                  },
                  {
                    "MatchVariable": 2
                  }
                ]
              }
            ],
            "key_list": [
              {
                "Text": "failed"
              }
            ],
            "list": false
          }
        },
        "is_not": true
      }
    }
  ],
  [
    229,
    {
      "Jz": 231
    }
  ],
  [
    230,
    {
      "Error": {
        "message": {
          "List": [
            {
              "Text": "incorrect match values: "
            },
            {
              "MatchVariable": 1
            },
            {
              "MatchVariable": 2
            }
          ]
        }
      }
    }
  ],
  [
    231,
    {
      "Clear": {
        "local_vars_idx": 0,
        "local_vars_num": 0,
        "match_vars": 6
      }
    }
  ]
]